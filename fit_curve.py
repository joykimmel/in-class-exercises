from scipy import optimize
import math as m
import numpy as np
import matplotlib.pyplot as plt

def fit_curve():

    data=[1.0,5.10363832351,
1.31034482759,4.80918109308,
1.62068965517,4.59328679282,
1.93103448276,4.43499436844,
2.24137931034,4.31893529885,
2.55172413793,4.23384147528,
2.86206896552,4.17145118699,
3.1724137931,4.12570699652,
3.48275862069,4.09216762656,
3.79310344828,4.06757675881,
4.10344827586,4.04954687998,
4.41379310345,4.03632747944,
4.72413793103,4.02663509312,
5.03448275862,4.01952869279,
5.34482758621,4.01431832208,
5.65517241379,4.01049810909,
5.96551724138,4.00769715151,
6.27586206897,4.00564350597,
6.58620689655,4.00413778521,
6.89655172414,4.00303379965,
7.20689655172,4.00222436396,
7.51724137931,4.00163089051,
7.8275862069,4.00119575928,
8.13793103448,4.00087672363,
8.44827586207,4.00064280858,
8.75862068966,4.00047130345,
9.06896551724,4.0003455569,
9.37931034483,4.00025336028,
9.68965517241,4.00018576226,
10.0,4.00013619979]
    

    print len(data)
    x = np.array(data[0:60:2])
    y = np.array(data[1:60:2])
    print type(x)
    print type(y)
    
    guess = [1,1]
    params, params_covariance = optimize.curve_fit(function, x, y, guess)

    print params[0]
    print params[1]
    
    plt.plot(x,function(x,params[0],params[1]), label = "fit", linestyle="--", linewidth = 3 )
    plt.plot(x,y, label = "data", linewidth = 1.5)
    plt.legend()
    plt.show()

	
			
def function(x,a,b):
    
    y = a*np.exp(-x*b) + 4
    
    return y

fit_curve()
	
	
